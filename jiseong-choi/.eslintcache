[{"/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/index.js":"1","/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/App.js":"2","/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/routes/root.js":"3","/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/routes/board.js":"4","/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/pages/Board/BoardUpload/index.js":"5","/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/components/Layout/index.js":"6","/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/pages/Board/BoardList/index.js":"7","/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/pages/Board/BoardDetail/index.js":"8","/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/components/Loading/index.js":"9"},{"size":196,"mtime":1613832260497,"results":"10","hashOfConfig":"11"},{"size":338,"mtime":1613832260496,"results":"12","hashOfConfig":"11"},{"size":413,"mtime":1613914153318,"results":"13","hashOfConfig":"11"},{"size":512,"mtime":1614073195170,"results":"14","hashOfConfig":"11"},{"size":3687,"mtime":1613832260498,"results":"15","hashOfConfig":"11"},{"size":480,"mtime":1613832260496,"results":"16","hashOfConfig":"11"},{"size":1594,"mtime":1614511766389,"results":"17","hashOfConfig":"11"},{"size":1073,"mtime":1614072752449,"results":"18","hashOfConfig":"11"},{"size":217,"mtime":1613915939407,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1hxthba",{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/index.js",[],["42","43"],"/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/App.js",["44","45","46"],"import React,{useState,useEffect} from 'react'\nimport RootRouter from 'routes/root'\n\nfunction App() {\n\n\tconst [accessToken, setAccessToken] = useState(window.localStorage.getItem('accessToken'))\n\n\n\t//null 일때 로그인이랑 회원가입 버튼 / not null 일때 회원정보 및 등등\n\n\treturn <RootRouter/>\n}\n\n\nexport default App;\n\n","/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/routes/root.js",[],"/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/routes/board.js",[],"/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/pages/Board/BoardUpload/index.js",[],"/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/components/Layout/index.js",[],"/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/pages/Board/BoardList/index.js",["47","48","49","50","51","52","53"],"import React,{useEffect, useState, useCallback, Suspense} from 'react'\nimport axios from 'axios'\nimport { Loading } from 'components/Loading'\nimport { Link } from 'react-router-dom';\nimport './index.css'\n\nfunction BoardList() {\n\n    const [loading, setLoading] = useState(false);\n    const [boards, setBoards] = useState([])\n\n    const onGetBoards = useCallback(async()=>{\n        setLoading(true);\n\n        const url = `https://tutor-dev-api.alpox.dev/boards`\n        const response = await axios.get(url)\n\n        if(response.status === 200){\n            const {data} = response\n            const {count, rows} = data\n\n            setBoards(rows)\n            console.log(response)\n            setLoading(false);\n        } else{\n            alert('Cannot get boards from the server.')\n        }\n    },[setBoards]\n    )\n\n    useEffect(() => {\n        onGetBoards()\n    }, [])\n\n    const boardList = boards.map((board)=>(\n        <BoardItem key={board.id} board={board} />\n    ))\n\n    return(\n        <>\n            <Loading view={loading} />\n            <div className=\"BoardList\">\n                {boardList}\n            </div>\n        </>\n    )\n}\n\n\nconst BoardItem = ({board}) =>{\n    const {id, title, subtitle, content, contentType,updateAt, userId} = board\n\n    return(\n        <div className=\"board\">\n            <Link to={`/boards/${id}`}>\n            <h1 className=\"title\">{title ? title.slice(0,6)+\"...\" :\"무제\"}</h1>\n            <p className=\"subtitle\" >{subtitle ? subtitle.slice(0,6)+\"...\": \"부제 없음\"}</p>\n            </Link>\n        </div>\n    )\n}\n\nexport default BoardList","/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/pages/Board/BoardDetail/index.js",["54","55","56"],"import React,{useState, useEffect, useCallback} from 'react'\nimport axios from 'axios'\n\nfunction BoardDetail(props) {\n\n    const boardId = props.match.params.id\n\n    const [board, setBoard] = useState([])\n\n    const getBoard = useCallback(async() =>{\n        const url = `https://tutor-dev-api.alpox.dev/boards/${boardId}`\n        const response = await axios.get(url)\n\n        if(response.status === 200){\n            const { data } = response\n            const { board } = data\n\n            setBoard(board)\n        } else{\n            alert('Cannot get board from the server.')\n        }\n        console.log(response)\n    })\n\n    useEffect(() => {\n        getBoard()\n    }, [])\n    \n    \n    const { title, subtitle, content, contentType,updatedAt, userId} = board\n\n\n    return (\n        <>\n            <div>\n                <h1>{title}</h1>\n                <h3>{subtitle}</h3>\n                <p>{content}</p>\n                <br />\n                <p>{updatedAt}</p>\n                <h4>{userId}</h4>\n            </div>\n        </>\n    )\n}\n\n\nexport default BoardDetail\n","/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/components/Loading/index.js",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":1,"column":24,"nodeType":"63","messageId":"64","endLine":1,"endColumn":33},{"ruleId":"61","severity":1,"message":"65","line":6,"column":9,"nodeType":"63","messageId":"64","endLine":6,"endColumn":20},{"ruleId":"61","severity":1,"message":"66","line":6,"column":22,"nodeType":"63","messageId":"64","endLine":6,"endColumn":36},{"ruleId":"61","severity":1,"message":"67","line":1,"column":49,"nodeType":"63","messageId":"64","endLine":1,"endColumn":57},{"ruleId":"61","severity":1,"message":"68","line":20,"column":20,"nodeType":"63","messageId":"64","endLine":20,"endColumn":25},{"ruleId":"69","severity":1,"message":"70","line":33,"column":8,"nodeType":"71","endLine":33,"endColumn":10,"suggestions":"72"},{"ruleId":"61","severity":1,"message":"73","line":51,"column":33,"nodeType":"63","messageId":"64","endLine":51,"endColumn":40},{"ruleId":"61","severity":1,"message":"74","line":51,"column":42,"nodeType":"63","messageId":"64","endLine":51,"endColumn":53},{"ruleId":"61","severity":1,"message":"75","line":51,"column":54,"nodeType":"63","messageId":"64","endLine":51,"endColumn":62},{"ruleId":"61","severity":1,"message":"76","line":51,"column":64,"nodeType":"63","messageId":"64","endLine":51,"endColumn":70},{"ruleId":"69","severity":1,"message":"77","line":10,"column":22,"nodeType":"63","endLine":10,"endColumn":33},{"ruleId":"69","severity":1,"message":"78","line":27,"column":8,"nodeType":"71","endLine":27,"endColumn":10,"suggestions":"79"},{"ruleId":"61","severity":1,"message":"74","line":30,"column":39,"nodeType":"63","messageId":"64","endLine":30,"endColumn":50},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'accessToken' is assigned a value but never used.","'setAccessToken' is assigned a value but never used.","'Suspense' is defined but never used.","'count' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'onGetBoards'. Either include it or remove the dependency array.","ArrayExpression",["82"],"'content' is assigned a value but never used.","'contentType' is assigned a value but never used.","'updateAt' is assigned a value but never used.","'userId' is assigned a value but never used.","React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","React Hook useEffect has a missing dependency: 'getBoard'. Either include it or remove the dependency array.",["83"],"no-global-assign","no-unsafe-negation",{"desc":"84","fix":"85"},{"desc":"86","fix":"87"},"Update the dependencies array to be: [onGetBoards]",{"range":"88","text":"89"},"Update the dependencies array to be: [getBoard]",{"range":"90","text":"91"},[872,874],"[onGetBoards]",[676,678],"[getBoard]"]