[{"/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/index.js":"1","/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/App.js":"2","/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/routes/root.js":"3","/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/routes/board.js":"4","/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/components/Layout/index.js":"5","/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/components/Loading/index.js":"6","/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/pages/Board/Detail/index.js":"7","/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/pages/Board/Upload/index.js":"8","/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/pages/Board/List/index.js":"9","/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/routes/auth.js":"10","/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/pages/Auth/Login/index.js":"11","/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/pages/Auth/Register/index.js":"12"},{"size":196,"mtime":1613832260497,"results":"13","hashOfConfig":"14"},{"size":391,"mtime":1614918336555,"results":"15","hashOfConfig":"14"},{"size":453,"mtime":1614918326021,"results":"16","hashOfConfig":"14"},{"size":550,"mtime":1614918268047,"results":"17","hashOfConfig":"14"},{"size":480,"mtime":1613832260496,"results":"18","hashOfConfig":"14"},{"size":217,"mtime":1613915939407,"results":"19","hashOfConfig":"14"},{"size":1674,"mtime":1614921926604,"results":"20","hashOfConfig":"14"},{"size":3687,"mtime":1613832260498,"results":"21","hashOfConfig":"14"},{"size":1588,"mtime":1614917185338,"results":"22","hashOfConfig":"14"},{"size":385,"mtime":1614912976960,"results":"23","hashOfConfig":"14"},{"size":1942,"mtime":1613832260497,"results":"24","hashOfConfig":"14"},{"size":2251,"mtime":1614910886883,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1hxthba",{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"28"},"/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/index.js",[],["54","55"],"/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/App.js",["56","57","58"],"import axios from 'axios'\nimport React,{useState,useEffect} from 'react'\nimport RootRouter from 'routes/root'\n\nfunction App() {\n\n\tconst [accessToken, setAccessToken] = useState(window.localStorage.getItem('accessToken'))\n\n\n\t//null 일때 로그인이랑 회원가입 버튼 / not null 일때 회원정보 및 등등\n\n\treturn <RootRouter accessToken={accessToken} />\n}\n\n\nexport default App;\n\n","/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/routes/root.js",[],"/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/routes/board.js",[],"/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/components/Layout/index.js",[],"/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/components/Loading/index.js",[],"/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/pages/Board/Detail/index.js",["59","60","61"],"/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/pages/Board/Upload/index.js",[],"/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/pages/Board/List/index.js",["62","63","64","65","66","67","68"],"import React,{useEffect, useState, useCallback, Suspense} from 'react'\nimport axios from 'axios'\nimport { Loading } from 'components/Loading'\nimport { Link } from 'react-router-dom';\nimport './index.css'\n\nfunction BoardList() {\n\n    const [loading, setLoading] = useState(false);\n    const [boards, setBoards] = useState([])\n\n    const onGetBoards = useCallback(async()=>{\n        setLoading(true);\n\n        const url = `https://tutor-dev-api.alpox.dev/boards`\n        const response = await axios.get(url)\n\n        if(response.status === 200){\n            const {data} = response\n            const {count, rows} = data\n\n            setBoards(rows)\n            console.log(response)\n            setLoading(false);\n        } else{\n            alert('Cannot get boards from the server.')\n        }\n    },[setBoards]\n    )\n\n    useEffect(() => {\n        onGetBoards()\n    }, [])\n\n    const boardList = boards.map((board)=>(\n        <BoardItem key={board.id} board={board} />\n    ))\n\n    return(\n        <>\n            <Loading view={loading} />\n            <div className=\"BoardList\">\n                {boardList}\n            </div>\n        </>\n    )\n}\n\n\nconst BoardItem = ({board}) =>{\n    const {id, title, subtitle, content, contentType,updateAt, userId} = board\n\n    return(\n        <div className=\"board\">\n            <Link to={`/boards/${id}`}>\n            <h1 className=\"title\">{title ? title.slice(0,8) :\"무제\"}</h1>\n            <p className=\"subtitle\" >{subtitle ? subtitle.slice(0,6)+\"...\": \"부제 없음\"}</p>\n            </Link>\n        </div>\n    )\n}\n\nexport default BoardList","/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/routes/auth.js",[],"/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/pages/Auth/Login/index.js",[],"/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/pages/Auth/Register/index.js",["69","70"],"import React, { useState } from 'react'\nimport axios from 'axios'\nimport './index.css'\n\nfunction Register(props) {\n\n    const [Inputs, setInputs] = useState({\n        email: \"\",\n        nickname: \"\",\n        password: \"\"\n    })\n    \n    const [loginLoading, setloginLoading] = useState(\"\")\n\n    const { email, nickname, password } = Inputs;\n\n    const onChange = (e) => {\n        const { value, name } = e.target;\n        setInputs(prev => ({\n            ...prev,\n            [name]:value\n        }))\n    }\n\n    const onSubmitHandler = (e) => {\n        e.preventDefault();\n\n        const body = {\n            email: email,\n            nickname:nickname,\n            password:password\n        }\n        axios.post('https://tutor-dev-api.alpox.dev/auth/register', body)\n            .then(response => {\n                console.log(response)\n                if (response.status === 201) {\n                    console.log(response.data.status)\n                    props.history.push('/login')\n                } else {\n                    console.log(response.data)\n                    alert('registerFailed')\n                }\n            })\n            .catch(err => {\n                console.log(err)\n                alert(\"우리 서버가 장애에요\")\n            })\n    }\n\n    return (\n        <div className=\"register-wrapper\">\n            <div className=\"register-container\">\n                <form className=\"register-form\" onSubmit={onSubmitHandler}>\n                    <h1 className=\"register-title\">Community</h1>\n                    <input required name=\"email\" className=\"register-form__input\" placeholder=\"email\" type=\"email\" value={email} onChange={onChange} />\n                    <input required name=\"nickname\" className=\"register-form__input\" placeholder=\"NickName\" type=\"text\" value={nickname} onChange={onChange} />\n                    <input required name=\"password\" className=\"register-form__input\" placeholder=\"Password\" type=\"password\" value={password} onChange={onChange} />\n\n                    <br />\n                    <button className=\"sign-in__button\" type='submit' >\n                        Sign in\n                    </button>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default Register\n",{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":1,"column":8,"nodeType":"77","messageId":"78","endLine":1,"endColumn":13},{"ruleId":"75","severity":1,"message":"79","line":2,"column":24,"nodeType":"77","messageId":"78","endLine":2,"endColumn":33},{"ruleId":"75","severity":1,"message":"80","line":7,"column":22,"nodeType":"77","messageId":"78","endLine":7,"endColumn":36},{"ruleId":"81","severity":1,"message":"82","line":20,"column":22,"nodeType":"77","endLine":20,"endColumn":33},{"ruleId":"81","severity":1,"message":"83","line":37,"column":8,"nodeType":"84","endLine":37,"endColumn":10,"suggestions":"85"},{"ruleId":"75","severity":1,"message":"86","line":40,"column":39,"nodeType":"77","messageId":"78","endLine":40,"endColumn":50},{"ruleId":"75","severity":1,"message":"87","line":1,"column":49,"nodeType":"77","messageId":"78","endLine":1,"endColumn":57},{"ruleId":"75","severity":1,"message":"88","line":20,"column":20,"nodeType":"77","messageId":"78","endLine":20,"endColumn":25},{"ruleId":"81","severity":1,"message":"89","line":33,"column":8,"nodeType":"84","endLine":33,"endColumn":10,"suggestions":"90"},{"ruleId":"75","severity":1,"message":"91","line":51,"column":33,"nodeType":"77","messageId":"78","endLine":51,"endColumn":40},{"ruleId":"75","severity":1,"message":"86","line":51,"column":42,"nodeType":"77","messageId":"78","endLine":51,"endColumn":53},{"ruleId":"75","severity":1,"message":"92","line":51,"column":54,"nodeType":"77","messageId":"78","endLine":51,"endColumn":62},{"ruleId":"75","severity":1,"message":"93","line":51,"column":64,"nodeType":"77","messageId":"78","endLine":51,"endColumn":70},{"ruleId":"75","severity":1,"message":"94","line":13,"column":12,"nodeType":"77","messageId":"78","endLine":13,"endColumn":24},{"ruleId":"75","severity":1,"message":"95","line":13,"column":26,"nodeType":"77","messageId":"78","endLine":13,"endColumn":41},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'setAccessToken' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","React Hook useEffect has a missing dependency: 'getBoard'. Either include it or remove the dependency array.","ArrayExpression",["98"],"'contentType' is assigned a value but never used.","'Suspense' is defined but never used.","'count' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'onGetBoards'. Either include it or remove the dependency array.",["99"],"'content' is assigned a value but never used.","'updateAt' is assigned a value but never used.","'userId' is assigned a value but never used.","'loginLoading' is assigned a value but never used.","'setloginLoading' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"100","fix":"101"},{"desc":"102","fix":"103"},"Update the dependencies array to be: [getBoard]",{"range":"104","text":"105"},"Update the dependencies array to be: [onGetBoards]",{"range":"106","text":"107"},[938,940],"[getBoard]",[872,874],"[onGetBoards]"]