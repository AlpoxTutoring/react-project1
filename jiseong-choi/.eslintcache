[{"/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/index.js":"1","/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/App.js":"2","/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/routes/root.js":"3","/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/routes/board.js":"4","/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/components/Layout/index.js":"5","/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/components/Loading/index.js":"6","/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/pages/Board/Detail/index.js":"7","/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/pages/Board/Upload/index.js":"8","/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/pages/Board/List/index.js":"9","/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/routes/auth.js":"10","/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/pages/Auth/Login/index.js":"11","/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/pages/Auth/Register/index.js":"12"},{"size":196,"mtime":1613832260497,"results":"13","hashOfConfig":"14"},{"size":390,"mtime":1614827101462,"results":"15","hashOfConfig":"14"},{"size":417,"mtime":1614830742095,"results":"16","hashOfConfig":"14"},{"size":513,"mtime":1614826273901,"results":"17","hashOfConfig":"14"},{"size":480,"mtime":1613832260496,"results":"18","hashOfConfig":"14"},{"size":217,"mtime":1613915939407,"results":"19","hashOfConfig":"14"},{"size":1145,"mtime":1614824854961,"results":"20","hashOfConfig":"14"},{"size":3687,"mtime":1613832260498,"results":"21","hashOfConfig":"14"},{"size":1594,"mtime":1614511766389,"results":"22","hashOfConfig":"14"},{"size":385,"mtime":1614826268768,"results":"23","hashOfConfig":"14"},{"size":1942,"mtime":1613832260497,"results":"24","hashOfConfig":"14"},{"size":2189,"mtime":1613832260497,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1hxthba",{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/index.js",[],["54","55"],"/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/App.js",["56","57","58"],"import axios from 'axios'\nimport React,{useState,useEffect} from 'react'\nimport RootRouter from 'routes/root'\n\nfunction App() {\n\n\tconst [accessToken, setAccessToken] = useState(window.localStorage.getItem('accessToken'))\n\n\n\t//null 일때 로그인이랑 회원가입 버튼 / not null 일때 회원정보 및 등등\n\n\treturn <RootRouter accessToken={accessToken}/>\n}\n\n\nexport default App;\n\n","/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/routes/root.js",[],"/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/routes/board.js",[],"/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/components/Layout/index.js",[],"/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/components/Loading/index.js",[],"/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/pages/Board/Detail/index.js",["59","60","61"],"import React,{useState, useEffect, useCallback} from 'react'\nimport axios from 'axios'\n\nfunction BoardDetail(props) {\n\n    const boardId = props.match.params.id\n\n    const user = props.accessToken\n\n    console.log(user)\n\n    const [board, setBoard] = useState([])\n\n    const getBoard = useCallback(async() =>{\n        const url = `https://tutor-dev-api.alpox.dev/boards/${boardId}`\n        const response = await axios.get(url)\n\n        if(response.status === 200){\n            const { data } = response\n            const { board } = data\n\n            setBoard(board)\n        } else{\n            alert('Cannot get board from the server.')\n        }\n        console.log(response)\n    })\n\n    useEffect(() => {\n        getBoard()\n    }, [])\n    \n    \n    const { title, subtitle, content, contentType,updatedAt, userId} = board\n\n\n    return (\n        <>\n            <div>\n                <h1>{title}</h1>\n                <h3>{subtitle}</h3>\n                <p>{content}</p>\n                <br />\n                <p>{updatedAt}</p>\n                <h4>{userId}</h4>\n            </div>\n            \n        </>\n    )\n}\n\n\nexport default BoardDetail\n","/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/pages/Board/Upload/index.js",[],"/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/pages/Board/List/index.js",["62","63","64","65","66","67","68"],"import React,{useEffect, useState, useCallback, Suspense} from 'react'\nimport axios from 'axios'\nimport { Loading } from 'components/Loading'\nimport { Link } from 'react-router-dom';\nimport './index.css'\n\nfunction BoardList() {\n\n    const [loading, setLoading] = useState(false);\n    const [boards, setBoards] = useState([])\n\n    const onGetBoards = useCallback(async()=>{\n        setLoading(true);\n\n        const url = `https://tutor-dev-api.alpox.dev/boards`\n        const response = await axios.get(url)\n\n        if(response.status === 200){\n            const {data} = response\n            const {count, rows} = data\n\n            setBoards(rows)\n            console.log(response)\n            setLoading(false);\n        } else{\n            alert('Cannot get boards from the server.')\n        }\n    },[setBoards]\n    )\n\n    useEffect(() => {\n        onGetBoards()\n    }, [])\n\n    const boardList = boards.map((board)=>(\n        <BoardItem key={board.id} board={board} />\n    ))\n\n    return(\n        <>\n            <Loading view={loading} />\n            <div className=\"BoardList\">\n                {boardList}\n            </div>\n        </>\n    )\n}\n\n\nconst BoardItem = ({board}) =>{\n    const {id, title, subtitle, content, contentType,updateAt, userId} = board\n\n    return(\n        <div className=\"board\">\n            <Link to={`/boards/${id}`}>\n            <h1 className=\"title\">{title ? title.slice(0,6)+\"...\" :\"무제\"}</h1>\n            <p className=\"subtitle\" >{subtitle ? subtitle.slice(0,6)+\"...\": \"부제 없음\"}</p>\n            </Link>\n        </div>\n    )\n}\n\nexport default BoardList","/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/routes/auth.js",[],"/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/pages/Auth/Login/index.js",[],"/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/pages/Auth/Register/index.js",[],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":1,"column":8,"nodeType":"75","messageId":"76","endLine":1,"endColumn":13},{"ruleId":"73","severity":1,"message":"77","line":2,"column":24,"nodeType":"75","messageId":"76","endLine":2,"endColumn":33},{"ruleId":"73","severity":1,"message":"78","line":7,"column":22,"nodeType":"75","messageId":"76","endLine":7,"endColumn":36},{"ruleId":"79","severity":1,"message":"80","line":14,"column":22,"nodeType":"75","endLine":14,"endColumn":33},{"ruleId":"79","severity":1,"message":"81","line":31,"column":8,"nodeType":"82","endLine":31,"endColumn":10,"suggestions":"83"},{"ruleId":"73","severity":1,"message":"84","line":34,"column":39,"nodeType":"75","messageId":"76","endLine":34,"endColumn":50},{"ruleId":"73","severity":1,"message":"85","line":1,"column":49,"nodeType":"75","messageId":"76","endLine":1,"endColumn":57},{"ruleId":"73","severity":1,"message":"86","line":20,"column":20,"nodeType":"75","messageId":"76","endLine":20,"endColumn":25},{"ruleId":"79","severity":1,"message":"87","line":33,"column":8,"nodeType":"82","endLine":33,"endColumn":10,"suggestions":"88"},{"ruleId":"73","severity":1,"message":"89","line":51,"column":33,"nodeType":"75","messageId":"76","endLine":51,"endColumn":40},{"ruleId":"73","severity":1,"message":"84","line":51,"column":42,"nodeType":"75","messageId":"76","endLine":51,"endColumn":53},{"ruleId":"73","severity":1,"message":"90","line":51,"column":54,"nodeType":"75","messageId":"76","endLine":51,"endColumn":62},{"ruleId":"73","severity":1,"message":"91","line":51,"column":64,"nodeType":"75","messageId":"76","endLine":51,"endColumn":70},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'setAccessToken' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","React Hook useEffect has a missing dependency: 'getBoard'. Either include it or remove the dependency array.","ArrayExpression",["94"],"'contentType' is assigned a value but never used.","'Suspense' is defined but never used.","'count' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'onGetBoards'. Either include it or remove the dependency array.",["95"],"'content' is assigned a value but never used.","'updateAt' is assigned a value but never used.","'userId' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"96","fix":"97"},{"desc":"98","fix":"99"},"Update the dependencies array to be: [getBoard]",{"range":"100","text":"101"},"Update the dependencies array to be: [onGetBoards]",{"range":"102","text":"103"},[735,737],"[getBoard]",[872,874],"[onGetBoards]"]