[{"/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/index.js":"1","/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/App.js":"2","/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/routes/root.js":"3","/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/routes/board.js":"4","/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/components/Layout/index.js":"5","/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/components/Loading/index.js":"6","/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/pages/Board/Detail/index.js":"7","/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/pages/Board/Upload/index.js":"8","/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/pages/Board/List/index.js":"9","/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/routes/auth.js":"10","/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/pages/Auth/Login/index.js":"11","/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/pages/Auth/Register/index.js":"12","/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/components/Menu/index.js":"13"},{"size":196,"mtime":1613832260497,"results":"14","hashOfConfig":"15"},{"size":391,"mtime":1614918336555,"results":"16","hashOfConfig":"15"},{"size":453,"mtime":1614918326021,"results":"17","hashOfConfig":"15"},{"size":550,"mtime":1614918268047,"results":"18","hashOfConfig":"15"},{"size":608,"mtime":1620972128490,"results":"19","hashOfConfig":"15"},{"size":217,"mtime":1613915939407,"results":"20","hashOfConfig":"15"},{"size":1821,"mtime":1617165228666,"results":"21","hashOfConfig":"15"},{"size":3775,"mtime":1622970466272,"results":"22","hashOfConfig":"15"},{"size":1876,"mtime":1620972333122,"results":"23","hashOfConfig":"15"},{"size":385,"mtime":1614912976960,"results":"24","hashOfConfig":"15"},{"size":1961,"mtime":1620971451242,"results":"25","hashOfConfig":"15"},{"size":2289,"mtime":1619521636477,"results":"26","hashOfConfig":"15"},{"size":846,"mtime":1620971896681,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"p2795w",{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/index.js",[],["59","60"],"/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/App.js",["61","62","63"],"import axios from 'axios'\nimport React,{useState,useEffect} from 'react'\nimport RootRouter from 'routes/root'\n\nfunction App() {\n\n\tconst [accessToken, setAccessToken] = useState(window.localStorage.getItem('accessToken'))\n\n\n\t//null 일때 로그인이랑 회원가입 버튼 / not null 일때 회원정보 및 등등\n\n\treturn <RootRouter accessToken={accessToken} />\n}\n\n\nexport default App;\n\n","/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/routes/root.js",[],"/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/routes/board.js",[],"/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/components/Layout/index.js",[],"/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/components/Loading/index.js",[],"/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/pages/Board/Detail/index.js",["64","65","66"],"import React,{useState, useEffect, useCallback} from 'react'\nimport axios from 'axios'\nimport './index.css'\n\nfunction BoardDetail(props) {\n\n    const boardId = props.match.params.id\n\n    const user = localStorage.getItem(\"accessToken\")\n\n    const boardDelete = async() =>{\n        const response = await axios.delete(`https://tutor-dev-api.alpox.dev/boards/{id}`)\n        console.log(response)\n    }\n\n    console.log(user)\n\n    const [board, setBoard] = useState([])\n\n    const getBoard = useCallback(async() =>{\n        const url = `https://tutor-dev-api.alpox.dev/boards/${boardId}`\n        const response = await axios.get(url)\n\n        if(response.status === 200){\n            const { data } = response\n            const { board } = data\n\n            setBoard(board)\n        } else{\n            alert('Cannot get board from the server.')\n        }\n        console.log(response)\n    })\n\n    useEffect(() => {\n        getBoard()\n    }, [])\n    \n    \n    const { title, subtitle, content, contentType,updatedAt, userId} = board\n\n    const showContent = (content) =>{\n        return {__html:`${content}`}\n    }\n\n    return (\n        <>\n            <div className=\"Board\">\n                <div>\n                <h1 className=\"boardTitle\">제목 : {title}</h1>\n                <h3 className=\"boardSubTitle\">부제 : {subtitle}</h3>\n                <p className=\"boardContent\" dangerouslySetInnerHTML={showContent(content)}></p>\n                <br />\n                <p className=\"boardUpdate\">{updatedAt}</p>\n                <h4 className=\"boardUserId\">{userId}</h4>\n\n                {\n                user === userId\n                &&\n                <button onClick={boardDelete} >Delete</button>\n                }\n                </div>\n            </div>\n            \n        </>\n    )\n}\n\n\nexport default BoardDetail\n","/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/pages/Board/Upload/index.js",[],"/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/pages/Board/List/index.js",["67","68","69","70","71","72"],"import React,{useEffect, useState, useCallback, Suspense} from 'react'\nimport axios from 'axios'\nimport { Loading } from 'components/Loading'\nimport { Link } from 'react-router-dom';\nimport './index.css'\n\nfunction BoardList() {\n\n    const [loading, setLoading] = useState(false);\n    const [boards, setBoards] = useState([])\n\n    const onGetBoards = useCallback(async()=>{\n        setLoading(true);\n\n        const url = `https://tutor-dev-api.alpox.dev/boards`\n        const response = await axios.get(url)\n\n        if(response.status === 200){\n            const {data} = response\n            const {count, rows} = data\n\n            setBoards(rows)\n            console.log(response)\n            setLoading(false);\n        } else{\n            alert('Cannot get boards from the server.')\n        }\n    },[setBoards]\n    )\n\n    useEffect(() => {\n        onGetBoards()\n    }, [])\n\n    const boardList = boards.map((board)=>(\n        <BoardItem key={board.id} board={board} />\n    ))\n\n    return(\n        <>\n            <Loading view={loading} />\n            <div className=\"BoardList\">\n                {boardList}\n            </div>\n        </>\n    )\n}\n\nconst showContent = (content) =>{\n    return {__html:`${content}`}\n}\n\nconst BoardItem = ({board}) =>{\n    const {id, title, subtitle, content, contentType,updateAt, userId} = board\n    let contents = content ? content.slice(0,50) : \"내용없음...\"\n    return(\n        <div className=\"board\">  \n            <Link to={`/boards/${id}`}>\n                <h1 className=\"title\">{title ? title.slice(0,20) :\"무제\"}</h1>\n                <div className=\"title-under\"></div>\n                <p className=\"subtitle\" >{subtitle ? subtitle.slice(0,50): \"무부제\"}</p>\n                <p className=\"content\" dangerouslySetInnerHTML={showContent(contents)} ></p>\n            </Link>\n            </div>\n    )\n}\n\nexport default BoardList","/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/routes/auth.js",[],"/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/pages/Auth/Login/index.js",[],"/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/pages/Auth/Register/index.js",["73","74"],"import React, { useState } from 'react'\nimport axios from 'axios'\nimport './index.css'\n\nfunction Register(props) {\n\n    const [Inputs, setInputs] = useState({\n        email: \"\",\n        nickname: \"\",\n        password: \"\"\n    })\n    \n    const [loginLoading, setloginLoading] = useState(\"\")\n\n    const { email, nickname, password } = Inputs;\n\n    const onChange = (e) => {\n        const { value, name } = e.target;\n        setInputs(prev => ({\n            ...prev,\n            [name]:value\n        }))\n    }\n\n    const onSubmitHandler = (e) => {\n        e.preventDefault();\n\n        const body = {\n            email: email,\n            nickname:nickname,\n            password:password\n        }\n        axios.post('https://tutor-dev-api.alpox.dev/auth/register', body)\n            .then(response => {\n                console.log(response)\n                if (response.status === 201) {\n                    console.log(response.data.status)\n                    props.history.push('/login')\n                } else {\n                    console.log(response.data)\n                    alert('registerFailed')\n                }\n            })\n            .catch(err => {\n                console.log(err)\n                alert(\"우리 서버가 장애에요\")\n            })\n    }\n\n    return (\n        <div className=\"register-wrapper\">\n            <div className=\"register-container\">\n                <form className=\"register-form\" onSubmit={onSubmitHandler}>\n                    <h1 className=\"register-title\">Community</h1>\n                    <input required name=\"email\" className=\"register-form__input\" placeholder=\"email\" type=\"email\" value={email} onChange={onChange} autoComplete=\"off\" />\n                    <input required name=\"nickname\" className=\"register-form__input\" placeholder=\"NickName\" type=\"text\" value={nickname} onChange={onChange} autoComplete=\"off\" />\n                    <input required name=\"password\" className=\"register-form__input\" placeholder=\"Password\" type=\"password\" value={password} onChange={onChange} />\n\n                    <br />\n                    <button className=\"sign-in__button\" type='submit' >\n                        Sign in\n                    </button>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default Register\n","/Users/jiseong-choi/Desktop/react-project1/jiseong-choi/src/components/Menu/index.js",[],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":1,"column":8,"nodeType":"81","messageId":"82","endLine":1,"endColumn":13},{"ruleId":"79","severity":1,"message":"83","line":2,"column":24,"nodeType":"81","messageId":"82","endLine":2,"endColumn":33},{"ruleId":"79","severity":1,"message":"84","line":7,"column":22,"nodeType":"81","messageId":"82","endLine":7,"endColumn":36},{"ruleId":"85","severity":1,"message":"86","line":20,"column":22,"nodeType":"81","endLine":20,"endColumn":33},{"ruleId":"85","severity":1,"message":"87","line":37,"column":8,"nodeType":"88","endLine":37,"endColumn":10,"suggestions":"89"},{"ruleId":"79","severity":1,"message":"90","line":40,"column":39,"nodeType":"81","messageId":"82","endLine":40,"endColumn":50},{"ruleId":"79","severity":1,"message":"91","line":1,"column":49,"nodeType":"81","messageId":"82","endLine":1,"endColumn":57},{"ruleId":"79","severity":1,"message":"92","line":20,"column":20,"nodeType":"81","messageId":"82","endLine":20,"endColumn":25},{"ruleId":"85","severity":1,"message":"93","line":33,"column":8,"nodeType":"88","endLine":33,"endColumn":10,"suggestions":"94"},{"ruleId":"79","severity":1,"message":"90","line":54,"column":42,"nodeType":"81","messageId":"82","endLine":54,"endColumn":53},{"ruleId":"79","severity":1,"message":"95","line":54,"column":54,"nodeType":"81","messageId":"82","endLine":54,"endColumn":62},{"ruleId":"79","severity":1,"message":"96","line":54,"column":64,"nodeType":"81","messageId":"82","endLine":54,"endColumn":70},{"ruleId":"79","severity":1,"message":"97","line":13,"column":12,"nodeType":"81","messageId":"82","endLine":13,"endColumn":24},{"ruleId":"79","severity":1,"message":"98","line":13,"column":26,"nodeType":"81","messageId":"82","endLine":13,"endColumn":41},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'setAccessToken' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","React Hook useEffect has a missing dependency: 'getBoard'. Either include it or remove the dependency array.","ArrayExpression",["101"],"'contentType' is assigned a value but never used.","'Suspense' is defined but never used.","'count' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'onGetBoards'. Either include it or remove the dependency array.",["102"],"'updateAt' is assigned a value but never used.","'userId' is assigned a value but never used.","'loginLoading' is assigned a value but never used.","'setloginLoading' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"103","fix":"104"},{"desc":"105","fix":"106"},"Update the dependencies array to be: [getBoard]",{"range":"107","text":"108"},"Update the dependencies array to be: [onGetBoards]",{"range":"109","text":"110"},[938,940],"[getBoard]",[872,874],"[onGetBoards]"]